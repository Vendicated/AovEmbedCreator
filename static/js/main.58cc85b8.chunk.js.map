{"version":3,"sources":["util/types.ts","util/EmbedManager.ts","components/Arcana.tsx","util/util.ts","components/ChoiceModal.tsx","components/Builds.tsx","components/Enchantments.tsx","components/HeroImage.tsx","components/EmbedCodeBlock.tsx","components/Select.tsx","components/Spotlight.tsx","HeroCreator.tsx","data/heroes.ts","components/Footer.tsx","App.tsx","index.tsx"],"names":["getTypedObjectEntries","obj","Object","entries","newBuild","name","ability","items","Array","fill","undefined","useEmbed","create","set","hero","heroImage","heroClass","roles","arcana","builds","enchantment","spotlight","init","data","setRoles","setArcana","idx","state","newArcana","slice","addBuild","removeBuild","newBuilds","splice","setBuildItem","buildIdx","itemIdx","item","setBuildAbility","setEnchantment","setSpotlight","Arcana","className","ArcanaColor","color","embed","type","toLowerCase","value","placeholder","onChange","e","target","getEmojiUrl","id","ChoiceModal","choices","onChoose","onCancel","useState","filter","setFilter","onClick","stopPropagation","autoFocus","c","includes","map","choice","src","iconUrl","alt","itemChoices","talentChoices","abilities","Builds","build","Build","remove","setItem","setAbility","showModal","setShowModal","i","BuildItem","console","log","Enchantments","imageUrl","setImageUrl","errored","setErrored","onLoad","onError","hidden","HeroImage","props","process","substring","lastIndexOf","timeout","EmbedCodeBlock","didCopy","setDidCopy","location","window","href","replace","json","JSON","stringify","author","icon_url","footer","text","timestamp","Date","toISOString","thumbnail","image","fields","join","inline","Boolean","language","style","atomOneDark","navigator","clipboard","writeText","clearTimeout","setTimeout","theme","colors","neutral0","neutral10","neutral20","neutral30","neutral50","neutral80","primary","primary25","primary50","styles","control","margin","Spotlight","options","r","label","HeroCreator","shallow","hash","isMulti","heroes","reduce","prev","curr","clazz","forEach","Footer","App","currentHero","setHash","useEffect","listener","addEventListener","removeEventListener","useLocationHash","prototype","hasOwnProperty","call","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58cc85b8.chunk.js","sourcesContent":["import items from \"../data/items.json\";\nimport abilities from \"../data/abilities.json\";\n\nexport type item = keyof typeof items;\nexport type ability = keyof typeof abilities;\n\nexport interface IBuild {\n    name: string;\n    ability: ability;\n    items: [item?, item?, item?, item?, item?, item?];\n}\n\nexport function getTypedObjectEntries<T>(obj: T) {\n    return Object.entries(obj) as Array<[keyof T, T[keyof T]]>;\n}\n","import create from \"zustand\";\nimport { IBuild, item, ability } from \"./types\";\n\nconst newBuild = () => ({ name: \"Build\", ability: \"Sprint\", items: Array(6).fill(undefined) } as IBuild);\n\ninterface EmbedStore {\n    hero: string;\n    heroImage: string;\n    heroClass: string;\n    roles: string[];\n    arcana: [string, string, string];\n    builds: IBuild[];\n    enchantment?: string;\n    spotlight?: string;\n\n    init(obj: { hero: string; heroImage: string; heroClass: string }): void;\n    setRoles(roles: this[\"roles\"]): void;\n    setArcana(idx: number, arcana: string): void;\n    addBuild(): void;\n    removeBuild(idx: number): void;\n    setBuildItem(buildIdx: number, itemIdx: number, item: item): void;\n    setBuildAbility(buildIdx: number, ability: ability): void;\n    setEnchantment(enchantment: string): void;\n    setSpotlight(spotlight: string): void;\n}\n\nexport const useEmbed = create<EmbedStore>(set => ({\n    hero: \"\",\n    heroImage: \"\",\n    heroClass: \"\",\n    roles: [],\n    arcana: [\"\", \"\", \"\"],\n    builds: [],\n    enchantment: undefined,\n    spotlight: undefined,\n\n    init: data => {\n        set({\n            ...data,\n            roles: [],\n            arcana: [\"\", \"\", \"\"],\n            builds: [newBuild()],\n            enchantment: undefined,\n            spotlight: undefined,\n        });\n    },\n\n    setRoles: roles => set({ roles }),\n\n    setArcana: (idx, arcana) =>\n        set(state => {\n            const newArcana = state.arcana.slice() as [string, string, string];\n            newArcana[idx] = arcana;\n            return { arcana: newArcana };\n        }),\n\n    addBuild: () => set(state => ({ builds: [...state.builds, newBuild()] })),\n    removeBuild: idx =>\n        set(state => {\n            const newBuilds = state.builds.slice();\n            newBuilds.splice(idx, 1);\n            return { builds: newBuilds };\n        }),\n\n    setBuildItem: (buildIdx, itemIdx, item) =>\n        set(state => {\n            const newBuilds = state.builds.slice();\n            newBuilds[buildIdx].items[itemIdx] = item;\n            return { builds: newBuilds };\n        }),\n\n    setBuildAbility: (buildIdx, ability) =>\n        set(state => {\n            const newBuilds = state.builds.slice();\n            newBuilds[buildIdx].ability = ability;\n            return { builds: newBuilds };\n        }),\n\n    setEnchantment: enchantment => set({ enchantment }),\n    setSpotlight: spotlight => set({ spotlight }),\n}));\n","import \"./Arcana.scss\";\nimport { useEmbed } from \"../util/EmbedManager\";\n\nexport default function Arcana() {\n    return (\n        <div className=\"arcana-body\">\n            <ArcanaColor color=\"Red\" idx={0} />\n            <ArcanaColor color=\"Purple\" idx={1} />\n            <ArcanaColor color=\"Green\" idx={2} />\n        </div>\n    );\n}\n\ninterface props {\n    color: \"Red\" | \"Purple\" | \"Green\";\n    idx: 0 | 1 | 2;\n}\n\nfunction ArcanaColor({ color, idx }: props) {\n    const [arcana, setArcana] = useEmbed(embed => [embed.arcana, embed.setArcana]);\n\n    return (\n        <input\n            type=\"text\"\n            className={`arcana-input arcana-input-${color.toLowerCase()}`}\n            value={arcana[idx]}\n            placeholder={color}\n            onChange={e => setArcana(idx, e.target.value)}\n        />\n    );\n}\n","import { useState, useEffect } from \"react\";\n\nexport function getEmojiUrl(id: string) {\n    return `https://cdn.discordapp.com/emojis/${id}.png`;\n}\n\nexport function useLocationHash() {\n    const [hash, setHash] = useState(window.location.hash.replace(\"#\", \"\"));\n\n    useEffect(() => {\n        const listener = () => setHash(window.location.hash.replace(\"#\", \"\"));\n        window.addEventListener(\"hashchange\", listener);\n\n        return () => window.removeEventListener(\"hashchange\", listener);\n    }, []);\n\n    return hash;\n}\n","import { useState } from \"react\";\nimport \"./ChoiceModal.scss\";\n\ninterface props<S extends string> {\n    choices: Array<{\n        name: S;\n        iconUrl: string;\n    }>;\n    onChoose: (choice: S) => void;\n    onCancel?: () => void;\n}\n\nexport default function ChoiceModal<S extends string>({ choices, onChoose, onCancel }: props<S>) {\n    const [filter, setFilter] = useState(\"\");\n\n    return (\n        <div\n            id=\"modal\"\n            onClick={e => {\n                e.stopPropagation();\n                onCancel?.();\n            }}\n        >\n            <div id=\"modal-content\">\n                <input\n                    autoFocus\n                    id=\"modal-filter\"\n                    value={filter}\n                    onChange={e => setFilter(e.target.value)}\n                    onClick={e => e.stopPropagation()}\n                />\n\n                <div>\n                    {choices\n                        .filter(c => c.name.toLowerCase().includes(filter))\n                        .map(choice => (\n                            <div\n                                className=\"modal-item\"\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onChoose(choice.name);\n                                }}\n                                key={choice.name}\n                            >\n                                <h3>{choice.name}</h3>\n                                <img src={choice.iconUrl} alt=\"?\" />\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport \"./Builds.scss\";\n\nimport items from \"../data/items.json\";\nimport abilities from \"../data/abilities.json\";\nimport { item, getTypedObjectEntries, IBuild } from \"../util/types\";\nimport { getEmojiUrl } from \"../util/util\";\nimport ChoiceModal from \"./ChoiceModal\";\nimport { useEmbed } from \"../util/EmbedManager\";\n\nconst itemChoices = getTypedObjectEntries(items).map(([name, data]) => ({ name, iconUrl: getEmojiUrl(data[1]) }));\nconst talentChoices = getTypedObjectEntries(abilities).map(([name, data]) => ({\n    name,\n    iconUrl: getEmojiUrl(data[1]),\n}));\n\nexport default function Builds() {\n    const [builds, addBuild] = useEmbed(embed => [embed.builds, embed.addBuild]);\n\n    return (\n        <>\n            {builds.map((build, idx) => (\n                <Build key={`build-${idx}`} idx={idx} build={build} />\n            ))}\n\n            <span\n                id=\"new-build-btn\"\n                className=\"hover-color\"\n                onClick={() => {\n                    addBuild();\n                }}\n            >\n                &#43;\n            </span>\n        </>\n    );\n}\n\ninterface BuildProps {\n    idx: number;\n    build: IBuild;\n}\n\nfunction Build({ build, idx }: BuildProps) {\n    const [remove, setItem, setAbility] = useEmbed(embed => [\n        embed.removeBuild,\n        embed.setBuildItem,\n        embed.setBuildAbility,\n    ]);\n    const [showModal, setShowModal] = useState(false);\n\n    return (\n        <div className=\"build-entry\">\n            {showModal && (\n                <ChoiceModal\n                    choices={talentChoices}\n                    onChoose={choice => {\n                        setAbility(idx, choice);\n                        setShowModal(false);\n                    }}\n                    onCancel={() => setShowModal(false)}\n                />\n            )}\n            <div className=\"build-entry-header\">\n                <img src={getEmojiUrl(abilities[build.ability][1])} alt=\"\" onClick={() => setShowModal(true)} />\n                <h3>Build {idx + 1}</h3>\n                {idx !== 0 && (\n                    <span className=\"hover-color\" onClick={() => remove(idx)}>\n                        &times;\n                    </span>\n                )}\n            </div>\n            <div className=\"build-box\">\n                {build.items.map((item, i) => (\n                    <BuildItem\n                        iconUrl={item && getEmojiUrl(items[item][1])}\n                        onChange={item => {\n                            setItem(idx, i, item);\n                        }}\n                        key={`build-box-${i}`}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\ninterface ItemProps {\n    iconUrl?: string;\n    onChange: (item: item) => void;\n}\n\nfunction BuildItem({ iconUrl, onChange }: ItemProps) {\n    const [showModal, setShowModal] = useState(false);\n    return (\n        <div\n            className=\"build-item\"\n            onClick={() => {\n                console.log(\"hi\");\n                setShowModal(true);\n            }}\n        >\n            {showModal && (\n                <ChoiceModal\n                    choices={itemChoices}\n                    onChoose={choice => {\n                        setShowModal(false);\n                        onChange(choice);\n                    }}\n                    onCancel={() => setShowModal(false)}\n                />\n            )}\n            {iconUrl && <img className=\"build-item-img\" src={iconUrl} alt=\"\" />}\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport \"./Enchantments.scss\";\nimport { useEmbed } from \"../util/EmbedManager\";\n\nexport default function Enchantments() {\n    const [imageUrl, setImageUrl] = useEmbed(embed => [embed.enchantment, embed.setEnchantment]);\n    const [errored, setErrored] = useState(false);\n\n    return (\n        <div className=\"enchantments-image-picker\">\n            <input\n                onChange={e => {\n                    setImageUrl(e.target.value);\n                }}\n                placeholder=\"Image URL\"\n            />\n            {imageUrl && (\n                <img\n                    src={imageUrl}\n                    alt=\"\"\n                    onLoad={() => setErrored(false)}\n                    onError={() => setErrored(true)}\n                    hidden={errored}\n                />\n            )}\n            {imageUrl && errored && <p>Failed to load that image :(</p>}\n        </div>\n    );\n}\n","interface Props extends React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n    hero: string;\n}\n\nexport default function HeroImage(props: Props) {\n    const { hero } = props;\n    return (\n        <img\n            src={process.env.PUBLIC_URL + `/images/heroes/${hero}`}\n            alt={hero.substring(0, hero.lastIndexOf(\".\"))}\n            {...props}\n        />\n    );\n}\n","import SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { atomOneDark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport { useState } from \"react\";\nimport { useEmbed } from \"../util/EmbedManager\";\nimport abilities from \"../data/abilities.json\";\nimport items from \"../data/items.json\";\n\nlet timeout: NodeJS.Timeout;\n\nexport default function EmbedCodeBlock() {\n    const [didCopy, setDidCopy] = useState(false);\n    const embed = useEmbed();\n\n    const location = window.location.href.replace(/\\/?#.*$/, \"\");\n    const json = JSON.stringify(\n        {\n            author: {\n                name: embed.hero,\n                icon_url: `${location}/images/classes/${embed.heroClass}.png`,\n            },\n            color: 53380,\n            footer: {\n                text: `Last updated`,\n            },\n            timestamp: new Date().toISOString(),\n            thumbnail: `${location}/images/heroes/${embed.heroImage}`,\n            image: embed.enchantment,\n            fields: [\n                {\n                    name: \"Role\",\n                    value: embed.roles.join(\", \"),\n                    inline: true,\n                },\n                {\n                    name: \"Arcana\",\n                    value: embed.arcana.join(\"\\n\"),\n                    inline: false,\n                },\n                ...embed.builds.map(build => ({\n                    name: ` {${abilities[build.ability][0]}} ${build.name}`,\n                    value: ` ${build.items.map(i => (i ? `{${items[i][0]}}` : \"N/A\")).join(\" \")} `,\n                    inline: false,\n                })),\n                embed.spotlight && {\n                    name: \"Hero Spotlight\",\n                    value: embed.spotlight,\n                    inline: false,\n                },\n            ].filter(Boolean),\n        },\n        null,\n        4\n    );\n\n    return (\n        <>\n            <p>{didCopy ? \"Copied!\" : \"Click the codeblock to copy\"}</p>\n            <SyntaxHighLighter\n                language=\"json\"\n                style={atomOneDark}\n                onClick={() => {\n                    window.navigator.clipboard.writeText(json);\n                    setDidCopy(true);\n                    if (timeout) clearTimeout(timeout);\n                    timeout = setTimeout(() => setDidCopy(false), 3000);\n                }}\n            >\n                {json}\n            </SyntaxHighLighter>\n        </>\n    );\n}\n","import DefSelect from \"react-select\";\n\nexport default (function Select(props: any) {\n    return (\n        <DefSelect\n            {...props}\n            theme={theme => ({\n                ...theme,\n                colors: {\n                    ...theme.colors,\n                    neutral0: \"#434C5E\", // background\n                    neutral10: \"#2E3440\", // selected item\n                    neutral20: \"#2E3440\", // border\n                    neutral30: \"darkorange\", // hover\n                    neutral50: \"lightgrey\", // placeholder text\n                    neutral80: \"white\", // selected item text\n                    primary: \"darkorange\", // active item and border of open picker\n                    primary25: \"#2E3440\", // hovered item\n                    primary50: \"#2E3440\" // clicked item\n                }\n            })}\n            styles={{\n                control: styles => ({ ...styles, margin: \"0.6em 0\" })\n            }}\n        />\n    );\n} as DefSelect);\n","import { useEmbed } from \"../util/EmbedManager\";\nimport \"./Spotlight.scss\";\n\nexport default function Spotlight() {\n    const [spotlight, setSpotlight] = useEmbed(embed => [embed.spotlight, embed.setSpotlight]);\n\n    return (\n        <div id=\"spotlight-input\">\n            <input\n                type=\"text\"\n                placeholder=\"Spotlight\"\n                value={spotlight || \"\"}\n                onChange={e => setSpotlight(e.target.value)}\n            />\n        </div>\n    );\n}\n","import shallow from \"zustand/shallow\";\nimport Arcana from \"./components/Arcana\";\nimport Builds from \"./components/Builds\";\nimport Enchantments from \"./components/Enchantments\";\nimport HeroImage from \"./components/HeroImage\";\nimport JsonCodeBlock from \"./components/EmbedCodeBlock\";\nimport Select from \"./components/Select\";\nimport \"./HeroCreator.scss\";\nimport { useEmbed } from \"./util/EmbedManager\";\nimport Spotlight from \"./components/Spotlight\";\n\nconst options = [\"Jungle\", \"Slayer Lane\", \"Middle Lane\", \"Dragon Lane\", \"Support\"].map(r => ({ value: r, label: r }));\n\nexport function HeroCreator() {\n    const [hero, heroImage, roles, setRoles] = useEmbed(\n        embed => [embed.hero, embed.heroImage, embed.roles, embed.setRoles],\n        shallow\n    );\n\n    return (\n        <div className=\"hero-wrapper\">\n            <span id=\"back-button\" className=\"hover-grow hover-color\" onClick={() => (window.location.hash = \"#\")}>\n                &times;\n            </span>\n            <div className=\"hero-container\">\n                <div className=\"hero-header\">\n                    <HeroImage hero={heroImage} className=\"hero-avatar\" />\n                    <h1>{hero}</h1>\n                </div>\n\n                <section className=\"roles-section\">\n                    <h2>Roles</h2>\n                    <Select\n                        isMulti={true}\n                        options={options as any}\n                        value={roles.map(r => ({ value: r, label: r }))}\n                        onChange={r => {\n                            // @ts-ignore this lib's typings fucking suck dude\n                            setRoles(r.map(i => i.value));\n                        }}\n                        placeholder=\"Roles\"\n                    />\n                </section>\n\n                <section className=\"arcana-section\">\n                    <h2>Arcana</h2>\n                    <Arcana />\n                </section>\n\n                <section className=\"builds-section\">\n                    <h2>Builds</h2>\n                    <Builds />\n                </section>\n\n                <section className=\"enchantments-section\">\n                    <h2>Enchantments</h2>\n                    <Enchantments />\n                </section>\n\n                <section className=\"spotlight-section\">\n                    <h2>Spotlight</h2>\n                    <Spotlight />\n                </section>\n\n                <section className=\"json-codeblock\">\n                    <h2>JSON</h2>\n                    <JsonCodeBlock />\n                </section>\n            </div>\n        </div>\n    );\n}\n","import heroes from \"./heroes.json\";\n\nexport default Object.entries(heroes).reduce((prev, curr) => {\n    const [clazz, heroes] = curr;\n    heroes.forEach(hero => {\n        const name = hero.substring(0, hero.lastIndexOf(\".\"));\n        prev[name] = [clazz, hero];\n    });\n    return prev;\n}, {} as Record<string, [string, string]>);\n","export function Footer() {\n    return (\n        <footer>\n            <p>\n                Made by Vendicated -{\" \"}\n                <a className=\"hover-color\" href=\"https://github.com/Vendicated/AovEmbedCreator\">\n                    Source Code\n                </a>\n            </p>\n        </footer>\n    );\n}\n","import \"./App.scss\";\nimport { HeroCreator } from \"./HeroCreator\";\nimport heroes from \"./data/heroes\";\nimport HeroImage from \"./components/HeroImage\";\nimport { Footer } from \"./components/Footer\";\nimport { useLocationHash } from \"./util/util\";\nimport { useEffect } from \"react\";\nimport { useEmbed } from \"./util/EmbedManager\";\n\nexport default function App() {\n    const currentHero = useLocationHash();\n    const init = useEmbed(embed => embed.init);\n\n    useEffect(() => {\n        const data = heroes[currentHero];\n        if (data) {\n            init({ hero: currentHero, heroClass: data[0], heroImage: data[1] });\n        } else window.location.hash = \"#\";\n    }, [currentHero, init]);\n\n    return (\n        <div id=\"wrapper\">\n            <div>\n                {currentHero && Object.prototype.hasOwnProperty.call(heroes, currentHero) ? (\n                    <HeroCreator />\n                ) : (\n                    <div id=\"hero-chooser\">\n                        <h1>AoV Hero Embed Generator</h1>\n                        <div>\n                            {Object.keys(heroes).map(hero => (\n                                <div\n                                    className=\"hero-avatar\"\n                                    onClick={() => (window.location.hash = `${hero}`)}\n                                    key={hero}\n                                >\n                                    <HeroImage hero={heroes[hero][1]} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n            <Footer />\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}