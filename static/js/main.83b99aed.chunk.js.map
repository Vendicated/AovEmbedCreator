{"version":3,"sources":["components/Arcana.tsx","util/types.ts","util/util.ts","components/ChoiceModal.tsx","components/Builds.tsx","components/Enchantments.tsx","components/HeroImage.tsx","components/JsonCodeBlock.tsx","components/Select.tsx","HeroCreator.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["Arcana","updateJson","useState","red","setRed","purple","setPurple","green","setGreen","useEffect","j","fields","value","className","ArcanaColor","color","onChange","toLowerCase","placeholder","e","target","getTypedObjectEntries","obj","Object","entries","getEmojiUrl","id","ChoiceModal","choices","onChoose","onCancel","filter","setFilter","onClick","stopPropagation","autoFocus","c","name","includes","map","choice","src","iconUrl","alt","itemChoices","items","talentChoices","abilities","newBuild","Array","fill","undefined","ability","Builds","builds","setBuilds","json","b","Boolean","i","join","build","idx","Build","remove","newBuilds","slice","splice","buildHasUpdated","showModal","setShowModal","item","BuildItem","console","log","Enchantments","imageUrl","setImageUrl","errored","setErrored","url","image","onLoad","onError","hidden","HeroImage","props","hero","process","substring","lastIndexOf","timeout","JsonCodeBlock","object","didCopy","setDidCopy","JSON","stringify","language","style","atomOneDark","window","navigator","clipboard","writeText","clearTimeout","setTimeout","theme","colors","neutral0","neutral10","neutral20","neutral30","neutral50","neutral80","primary","primary25","primary50","styles","control","margin","options","r","label","HeroCreator","onBack","heroName","roles","setRoles","filename","author","icon_url","location","href","heroes","find","footer","text","timestamp","Date","toISOString","thumbnail","inline","createEmbed","setJson","fn","isMulti","Footer","App","currentHero","setCurrentHero","values","flat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83b99aed.chunk.js","sourcesContent":["import \"./Arcana.scss\";\nimport { SectionProps } from \"../util/types\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Arcana({ updateJson }: SectionProps) {\n    const [red, setRed] = useState(\"RED\");\n    const [purple, setPurple] = useState(\"PURPLE\");\n    const [green, setGreen] = useState(\"GREEN\");\n\n    useEffect(() => {\n        updateJson(j => (j.fields[1].value = `${red}\\n${purple}\\n${green}`));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [red, purple, green]);\n\n    return (\n        <div className=\"arcana-body\">\n            <ArcanaColor color=\"Red\" onChange={setRed} />\n            <ArcanaColor color=\"Purple\" onChange={setPurple} />\n            <ArcanaColor color=\"Green\" onChange={setGreen} />\n        </div>\n    );\n}\n\ninterface props {\n    color: \"Red\" | \"Purple\" | \"Green\";\n    onChange(val: string): void;\n}\n\nfunction ArcanaColor({ color, onChange }: props) {\n    return (\n        <input\n            className={`arcana-input arcana-input-${color.toLowerCase()}`}\n            placeholder={color}\n            onChange={e => onChange(e.target.value)}\n        />\n    );\n}\n","import items from \"../data/items.json\";\nimport abilities from \"../data/abilities.json\";\nimport { createEmbed } from \"./util\";\n\nexport type item = keyof typeof items;\nexport type ability = keyof typeof abilities;\n\nexport interface SectionProps {\n    updateJson(fn: (json: ReturnType<typeof createEmbed>) => void): void;\n}\n\nexport function getTypedObjectEntries<T>(obj: T) {\n    return Object.entries(obj) as Array<[keyof T, T[keyof T]]>;\n}\n","import heroes from \"../data/heroes.json\";\n\nexport function getEmojiUrl(id: string) {\n    return `https://cdn.discordapp.com/emojis/${id}.png`;\n}\n\nexport function createEmbed(filename: string, heroName: string) {\n    return {\n        author: {\n            name: heroName,\n            icon_url: `${window.location.href}images/classes/${\n                Object.entries(heroes).find(e => e[1].includes(filename))![0]\n            }.png`,\n        },\n        color: 53380,\n        footer: {\n            text: `Last updated`,\n        },\n        timestamp: new Date().toISOString(),\n        thumbnail: `${window.location.href}images/heroes/${filename}`,\n        image: \"UNSPECIFIED\",\n        fields: [\n            {\n                name: \"Role\",\n                value: \"UNSPECIFIED\",\n                inline: true,\n            },\n            {\n                name: \"Arcana\",\n                value: \"UNSPECIFIED\",\n                inline: false,\n            },\n            {\n                name: \"Build\",\n                value: \"UNSPECIFIED\",\n                inline: false,\n            },\n        ],\n    };\n}\n","import { useState } from \"react\";\nimport \"./ChoiceModal.scss\";\n\ninterface props<S extends string> {\n    choices: Array<{\n        name: S;\n        iconUrl: string;\n    }>;\n    onChoose: (choice: S) => void;\n    onCancel?: () => void;\n}\n\nexport default function ChoiceModal<S extends string>({ choices, onChoose, onCancel }: props<S>) {\n    const [filter, setFilter] = useState(\"\");\n\n    return (\n        <div\n            id=\"modal\"\n            onClick={e => {\n                e.stopPropagation();\n                onCancel?.();\n            }}\n        >\n            <div id=\"modal-content\">\n                <input\n                    autoFocus\n                    id=\"modal-filter\"\n                    value={filter}\n                    onChange={e => setFilter(e.target.value)}\n                    onClick={e => e.stopPropagation()}\n                />\n\n                <div>\n                    {choices\n                        .filter(c => c.name.toLowerCase().includes(filter))\n                        .map(choice => (\n                            <div\n                                className=\"modal-item\"\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onChoose(choice.name);\n                                }}\n                                key={choice.name}\n                            >\n                                <h3>{choice.name}</h3>\n                                <img src={choice.iconUrl} alt=\"?\" />\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { useEffect, useState } from \"react\";\nimport \"./Builds.scss\";\n\nimport items from \"../data/items.json\";\nimport abilities from \"../data/abilities.json\";\nimport { item, ability, getTypedObjectEntries, SectionProps } from \"../util/types\";\nimport { getEmojiUrl } from \"../util/util\";\nimport ChoiceModal from \"./ChoiceModal\";\n\nconst itemChoices = getTypedObjectEntries(items).map(([name, data]) => ({ name, iconUrl: getEmojiUrl(data[1]) }));\nconst talentChoices = getTypedObjectEntries(abilities).map(([name, data]) => ({\n    name,\n    iconUrl: getEmojiUrl(data[1]),\n}));\n\ninterface IBuild {\n    ability: ability;\n    items: [item?, item?, item?, item?, item?, item?];\n}\n\nconst newBuild = () => ({ items: Array(6).fill(undefined), ability: \"Sprint\" } as IBuild);\n\nexport default function Builds({ updateJson }: SectionProps) {\n    const [builds, setBuilds] = useState<IBuild[]>([newBuild()]);\n\n    useEffect(() => {\n        updateJson(\n            json =>\n                (json.fields[2].value = builds\n                    .map(\n                        b =>\n                            ` {${abilities[b.ability][0]}} | ${b.items\n                                .filter(Boolean)\n                                .map(i => `{${items[i!][0]}}`)\n                                .join(\" \")} `\n                    )\n                    .join(\"\\n\\n\"))\n        );\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [builds]);\n\n    return (\n        <>\n            {builds.map((build, idx) => (\n                <Build\n                    key={`build-${idx}`}\n                    idx={idx}\n                    build={build}\n                    remove={() => {\n                        const newBuilds = builds.slice();\n                        newBuilds.splice(idx, 1);\n                        setBuilds(newBuilds);\n                    }}\n                    buildHasUpdated={() => {\n                        setBuilds(builds.slice());\n                    }}\n                />\n            ))}\n\n            <span\n                id=\"new-build-btn\"\n                className=\"hover-color\"\n                onClick={() => {\n                    setBuilds([...builds, newBuild()]);\n                }}\n            >\n                &#43;\n            </span>\n        </>\n    );\n}\n\ninterface BuildProps {\n    idx: number;\n    build: IBuild;\n    buildHasUpdated(): void;\n    remove(): void;\n}\n\nfunction Build({ build, buildHasUpdated, idx, remove }: BuildProps) {\n    const [showModal, setShowModal] = useState(false);\n\n    return (\n        <div className=\"build-entry\">\n            {showModal && (\n                <ChoiceModal\n                    choices={talentChoices}\n                    onChoose={choice => {\n                        setShowModal(false);\n                        build.ability = choice;\n                        buildHasUpdated();\n                    }}\n                    onCancel={() => setShowModal(false)}\n                />\n            )}\n            <div className=\"build-entry-header\">\n                <img src={getEmojiUrl(abilities[build.ability][1])} alt=\"\" onClick={() => setShowModal(true)} />\n                <h3>Build {idx + 1}</h3>\n                {idx !== 0 && (\n                    <span className=\"hover-color\" onClick={remove}>\n                        &times;\n                    </span>\n                )}\n            </div>\n            <div className=\"build-box\">\n                {build.items.map((item, idx) => (\n                    <BuildItem\n                        iconUrl={item && getEmojiUrl(items[item][1])}\n                        onChange={item => {\n                            build.items[idx] = item;\n                            buildHasUpdated();\n                        }}\n                        key={`build-box-${idx}`}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\ninterface ItemProps {\n    iconUrl?: string;\n    onChange: (item: item) => void;\n}\n\nfunction BuildItem({ iconUrl, onChange }: ItemProps) {\n    const [showModal, setShowModal] = useState(false);\n    return (\n        <div\n            className=\"build-item\"\n            onClick={() => {\n                console.log(\"hi\");\n                setShowModal(true);\n            }}\n        >\n            {showModal && (\n                <ChoiceModal\n                    choices={itemChoices}\n                    onChoose={choice => {\n                        setShowModal(false);\n                        onChange(choice);\n                    }}\n                    onCancel={() => setShowModal(false)}\n                />\n            )}\n            {iconUrl && <img className=\"build-item-img\" src={iconUrl} alt=\"\" />}\n        </div>\n    );\n}\n","import { useState } from \"react\";\nimport \"./Enchantments.scss\";\nimport { SectionProps } from \"../util/types\";\n\nexport default function Enchantments({ updateJson }: SectionProps) {\n    const [imageUrl, setImageUrl] = useState<string>();\n    const [errored, setErrored] = useState(false);\n\n    return (\n        <div className=\"enchantments-image-picker\">\n            <input\n                value={imageUrl}\n                onChange={e => {\n                    const url = e.target.value;\n                    setImageUrl(url);\n                    updateJson(e => (e.image = url));\n                }}\n                placeholder=\"Image URL\"\n            />\n            {imageUrl && (\n                <img\n                    src={imageUrl}\n                    alt=\"\"\n                    onLoad={() => setErrored(false)}\n                    onError={() => setErrored(true)}\n                    hidden={errored}\n                />\n            )}\n            {imageUrl && errored && <p>Failed to load that image :(</p>}\n        </div>\n    );\n}\n","interface Props extends React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n    hero: string;\n}\n\nexport default function HeroImage(props: Props) {\n    const { hero } = props;\n    return (\n        <img\n            src={process.env.PUBLIC_URL + `/images/heroes/${hero}`}\n            alt={hero.substring(0, hero.lastIndexOf(\".\"))}\n            {...props}\n        />\n    );\n}\n","import SyntaxHighLighter from \"react-syntax-highlighter\";\nimport { atomOneDark } from \"react-syntax-highlighter/dist/cjs/styles/hljs\";\nimport { useState } from \"react\";\n\ninterface Props {\n    object: any;\n}\n\nlet timeout: NodeJS.Timeout;\n\nexport default function JsonCodeBlock({ object }: Props) {\n    const [didCopy, setDidCopy] = useState(false);\n    const json = JSON.stringify(object, null, 4);\n    return (\n        <>\n            <p>{didCopy ? \"Copied!\" : \"Click the codeblock to copy\"}</p>\n            <SyntaxHighLighter\n                language=\"json\"\n                style={atomOneDark}\n                onClick={() => {\n                    window.navigator.clipboard.writeText(json);\n                    setDidCopy(true);\n                    if (timeout) clearTimeout(timeout);\n                    timeout = setTimeout(() => setDidCopy(false), 3000);\n                }}\n            >\n                {json}\n            </SyntaxHighLighter>\n        </>\n    );\n}\n","import DefSelect from \"react-select\";\n\nexport default (function Select(props: any) {\n    return (\n        <DefSelect\n            {...props}\n            theme={theme => ({\n                ...theme,\n                colors: {\n                    ...theme.colors,\n                    neutral0: \"#434C5E\", // background\n                    neutral10: \"#2E3440\", // selected item\n                    neutral20: \"#2E3440\", // border\n                    neutral30: \"darkorange\", // hover\n                    neutral50: \"lightgrey\", // placeholder text\n                    neutral80: \"white\", // selected item text\n                    primary: \"darkorange\", // active item and border of open picker\n                    primary25: \"#2E3440\", // hovered item\n                    primary50: \"#2E3440\" // clicked item\n                }\n            })}\n            styles={{\n                control: styles => ({ ...styles, margin: \"0.6em 0\" })\n            }}\n        />\n    );\n} as DefSelect);\n","import { useState } from \"react\";\nimport Arcana from \"./components/Arcana\";\nimport Builds from \"./components/Builds\";\nimport Enchantments from \"./components/Enchantments\";\nimport HeroImage from \"./components/HeroImage\";\nimport JsonCodeBlock from \"./components/JsonCodeBlock\";\nimport Select from \"./components/Select\";\nimport \"./HeroCreator.scss\";\nimport { SectionProps } from \"./util/types\";\nimport { createEmbed } from \"./util/util\";\n\ninterface props {\n    hero: string;\n    onBack: () => void;\n}\n\nconst options = [\"Jungle\", \"Slayer Lane\", \"Middle Lane\", \"Dragon Lane\", \"Support\"].map(r => ({ value: r, label: r }));\n\nexport function HeroCreator({ hero, onBack }: props) {\n    const heroName = hero.substring(0, hero.lastIndexOf(\".\"));\n\n    const [roles, setRoles] = useState<readonly string[]>();\n    const [json, setJson] = useState(createEmbed(hero, heroName));\n\n    const props: SectionProps = {\n        updateJson(fn: (j: typeof json) => void) {\n            fn(json);\n            setJson({ ...json });\n        },\n    };\n\n    return (\n        <div className=\"hero-wrapper\">\n            <span id=\"back-button\" className=\"hover-grow hover-color\" onClick={onBack}>\n                &times;\n            </span>\n            <div className=\"hero-container\">\n                <div className=\"hero-header\">\n                    <HeroImage hero={hero} className=\"hero-avatar\" />\n                    <h1>{heroName}</h1>\n                </div>\n\n                <section className=\"roles-section\">\n                    <h2>Roles</h2>\n                    <Select\n                        isMulti={true}\n                        options={options as any}\n                        value={roles}\n                        onChange={r => {\n                            setRoles(r);\n                            // @ts-ignore this lib fucking sucks dude\n                            props.updateJson(j => (j.fields[0].value = r.map(i => i.value).join(\", \")));\n                        }}\n                        placeholder=\"Roles\"\n                    />\n                </section>\n\n                <section className=\"arcana-section\">\n                    <h2>Arcana</h2>\n                    <Arcana {...props} />\n                </section>\n\n                <section className=\"builds-section\">\n                    <h2>Builds</h2>\n                    <Builds {...props} />\n                </section>\n\n                <section className=\"enchantments-section\">\n                    <h2>Enchantments</h2>\n                    <Enchantments {...props} />\n                </section>\n\n                <section className=\"json-codeblock\">\n                    <h2>JSON</h2>\n                    <JsonCodeBlock object={json} {...props} />\n                </section>\n            </div>\n        </div>\n    );\n}\n","export function Footer() {\n    return (\n        <footer>\n            <p>\n                Made by Vendicated -{\" \"}\n                <a className=\"hover-color\" href=\"https://github.com/Vendicated/AovEmbedCreator\">\n                    Source Code\n                </a>\n            </p>\n        </footer>\n    );\n}\n","import { useState } from \"react\";\nimport \"./App.scss\";\nimport { HeroCreator } from \"./HeroCreator\";\nimport heroes from \"./data/heroes.json\";\nimport HeroImage from \"./components/HeroImage\";\nimport { Footer } from \"./components/Footer\";\n\nexport default function App() {\n    const [currentHero, setCurrentHero] = useState<string>();\n\n    return (\n        <div id=\"wrapper\">\n            <div>\n                {currentHero ? (\n                    <HeroCreator hero={currentHero} onBack={() => setCurrentHero(undefined)} />\n                ) : (\n                    <div id=\"hero-chooser\">\n                        <h1>AoV Hero Embed Generator</h1>\n                        <div>\n                            {Object.values(heroes)\n                                .flat()\n                                .map(hero => (\n                                    <div className=\"hero-avatar\" onClick={() => setCurrentHero(hero)} key={hero}>\n                                        <HeroImage hero={hero} />\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n            <Footer />\n        </div>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}